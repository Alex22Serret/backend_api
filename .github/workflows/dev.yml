# Nombre del flujo de trabajo para identificar la tarea en GitHub Actions
name: Build, Test, and Push Docker Image for Backend API

# Evento que dispara el flujo de trabajo: cada vez que hay un push a la rama "prod"
on:
  push:
    branches:
      - dev  

# Definición de trabajos en el flujo de trabajo
jobs:
  # Trabajo de análisis de código con SonarCloud
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Notify Slack - Inicio de análisis
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "channel": "#ci-alerts-back",
            "text": "Inicio de análisis del código"
          }' $SLACK_WEBHOOK_URL

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Notificación final del estado del análisis
      - name: Notify Slack - Resultado del análisis
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          status=$([[ $GITHUB_JOB == 'success' ]] && echo "éxito" || echo "fallo")
          url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST -H 'Content-type: application/json' --data '{
            "channel": "#ci-alerts-back",
            "text": "Análisis de código completado con '"$status"'. Ver detalles: '"$url"'"
          }' $SLACK_WEBHOOK_URL

  # Trabajo de construcción y publicación de la imagen Docker
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Notify Slack - Inicio de construcción
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "channel": "#ci-alerts-back",
            "text": "Inicio de construcción de la imagen Docker para backend_api..."
          }' $SLACK_WEBHOOK_URL

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build Docker image
        id: build
        run: docker build -f Dockerfile -t alex22serret/backend_api:latest .

      - name: Push Docker image
        run: docker push alex22serret/backend_api:latest

      # Notificación final del estado de la construcción
      - name: Notify Slack - Resultado de la construcción
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          status=$([[ $GITHUB_JOB == 'success' ]] && echo "éxito" || echo "fallo")
          url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST -H 'Content-type: application/json' --data '{
            "channel": "#ci-alerts-back",
            "text": "Construcción de la imagen Docker para backend_api completada con '"$status"'. Ver detalles: '"$url"'"
          }' $SLACK_WEBHOOK_URL
